START CONTROL,
*PROJECT WALL-E
!C = WALLE_APR24V2.asc;WALLE_MAY24V2.asc;WALLE_JUN24V2.asc,
!C = P_WALLE_2023Q2.ASC;P_WALLE_2023Q3.ASC;WALL_E_Q4_OCT.asc;WALLE_NOVEMBER.asc;WALLEDEC_1_10.asc;WALLE_JAN24V3.asc;WALLE_FEB24V2.asc;WALLE_MAR24V2.asc;WALLE_APR24V2.asc;WALLE_MAY24V2.asc;WALLE_JUN24V2.asc,
C = P_WALLE_2023Q3.ASC;WALL_E_Q4_OCT.asc;WALLE_NOVEMBER.asc;WALLEDEC_1_10.asc;WALLE_JAN24V3.asc;WALLE_FEB24V2.asc;WALLE_MAR24V2.asc;WALLE_APR24V2.asc;WALLE_MAY24V2.asc;WALLE_JUN24V2.asc;WALLE_JUL24V2.ASC;WALLE_AUG24V2.ASC;WALLE_SEP24V2.ASC,

!C = May2024v2.asc,


Y,
CEP,
CSVR2,
TERSE,

OLDNAMES,
FINISH CONTROL,

START DATA,
ORDER1234567890XV,
SERIAL NUMBER IN COLUMNS 1-10,
CARD CHARACTERS BINARY 300000,
TEMPORARY /99999999/,

DI $RESP = $1-10,



[*INSERT WallE_resp]
[*INSERT WALL_E_resp]

DM $OldQuarter = $Q32021/NB+$Q42021/NB+$Q12022/NB+$Q22022/NB+$Q32022/NB+$Q42022/NB+$Q12023/NB+$Q22023/NB+$Q32023/NB,
DM $NewQuarter = $Q42023/NB+$Q12024/NB+$Q22024/NB+$Q32024/NB,

DM $HT = T,
 HT = "TOTAL",
  H = "TOTAL*(A);",

DM $HTot = T,
$Q32021/NB,
$Q42021/NB,
$Q12022/NB,
$Q22022/NB,
$Q32022/NB,
$Q42022/NB,
$Q12023/NB,
$Q22023/NB,
$Q32023/NB,
$Q42023/NB,
$Q12024/NB,
$Q22024/NB,
HT = "TOTAL HEADER",
H = "
TOTAL *(a);
Q3 2021 *(b);
Q4 2021 *(c);
Q1 2022 *(d);
Q2 2022 *(e);
Q3 2022 *(f);
Q4 2022 *(g);
Q1 2023 *(h);
Q2 2023 *(i);
Q3 2023 *(j);
Q4 2023 *(k);
Q1 2024 *(l);
Q2 2024 *(m)",
  

UL $NewQuarter/NB, goto @Q32023,
[*INSERT [WALLEv2_CARDCOL_CATERGORY]]
[*INSERT ADDITIONAL_COLUMNS]
[*INSERT ADDITIONAL_COLUMNS_JAN_FEB]
IF $NewQuarter/NB, goto @end,
@Q32023,
[*INSERT WallE_insertGlobal]
[*INSERT WallE_oesoe]
[*INSERT walle_cardcol_banner]
[*INSERT WallE_insertAlign1]
@end,


! if $NewQuarter/B, then,
! end if,

[*INSERT WALL_E_STUBS_CATEGORY]
[*INSERT W_HEADER]
[*INSERT W_WTS_trended]

!-----------Unique
DM $QPH1 = $26964/1-9,'0',
!-----------Unique
DM $QSH1 = $27404/1-9,'0',
!-----------Unique
DM $QST1 = $27468/1-9,'0',
!-----------Unique
DM $QGI1 = $33025/1-9,'0',
!-----------Unique
DM $QSC1 = $33093/1-9,'0',


DM $T_Q104_1 = $25110/1,$25111/1,$25112/1,$25113/1,$25114/1,$25115/1,$25116/1,$25117/1,$25118/1,$Blank/10-90,$25119/1,$Blank/92-98,$25120/1,
DM $T_Q104_2 = $25121/1,$25122/1,$25123/1,$25124/1,$25125/1,$25126/1,$25127/1,$25128/1,$25129/1,$Blank/10-90,$25130/1,$Blank/92-98,$25131/1,
DM $T_Q104_3 = $25132/1,$25133/1,$25134/1,$25135/1,$25136/1,$25137/1,$25138/1,$25139/1,$25140/1,$Blank/10-90,$25141/1,$Blank/92-98,$25142/1,
DM $T_Q104_4 = $25143/1,$25144/1,$25145/1,$25146/1,$25147/1,$25148/1,$25149/1,$25150/1,$25151/1,$Blank/10-90,$25152/1,$Blank/92-98,$25153/1,
DM $T_Q104_5 = $25154/1,$25155/1,$25156/1,$25157/1,$25158/1,$25159/1,$25160/1,$25161/1,$25162/1,$Blank/10-90,$25163/1,$Blank/92-98,$25164/1,
DM $T_Q104_6 = $25165/1,$25166/1,$25167/1,$25168/1,$25169/1,$25170/1,$25171/1,$25172/1,$25173/1,$Blank/10-90,$25174/1,$Blank/92-98,$25175/1,
DM $T_Q104_7 = $25176/1,$25177/1,$25178/1,$25179/1,$25180/1,$25181/1,$25182/1,$25183/1,$25184/1,$Blank/10-90,$25185/1,$Blank/92-98,$25186/1,
DM $T_Q104_8 = $25187/1,$25188/1,$25189/1,$25190/1,$25191/1,$25192/1,$25193/1,$25194/1,$25195/1,$Blank/10-90,$25196/1,$Blank/92-98,$25197/1,
DM $T_Q104_9 = $25198/1,$25199/1,$25200/1,$25201/1,$25202/1,$25203/1,$25204/1,$25205/1,$25206/1,$Blank/10-90,$25207/1,$Blank/92-98,$25208/1,
DM $T_Q104_10 = $25209/1,$25210/1,$25211/1,$25212/1,$25213/1,$25214/1,$25215/1,$25216/1,$25217/1,$Blank/10-90,$25218/1,$Blank/92-98,$25219/1,
DM $T_Q104_11 = $25220/1,$25221/1,$25222/1,$25223/1,$25224/1,$25225/1,$25226/1,$25227/1,$25228/1,$Blank/10-90,$25229/1,$Blank/92-98,$25230/1,
DM $T_Q104_12 = $25231/1,$25232/1,$25233/1,$25234/1,$25235/1,$25236/1,$25237/1,$25238/1,$25239/1,$Blank/10-90,$25240/1,$Blank/92-98,$25241/1,
DM $T_Q104_13 = $25242/1,$25243/1,$25244/1,$25245/1,$25246/1,$25247/1,$25248/1,$25249/1,$25250/1,$Blank/10-90,$25251/1,$Blank/92-98,$25252/1,
DM $T_Q104_14 = $25253/1,$25254/1,$25255/1,$25256/1,$25257/1,$25258/1,$25259/1,$25260/1,$25261/1,$Blank/10-90,$25262/1,$Blank/92-98,$25263/1,
DM $T_Q104_15 = $25264/1,$25265/1,$25266/1,$25267/1,$25268/1,$25269/1,$25270/1,$25271/1,$25272/1,$Blank/10-90,$25273/1,$Blank/92-98,$25274/1,
DM $T_Q104_16 = $25275/1,$25276/1,$25277/1,$25278/1,$25279/1,$25280/1,$25281/1,$25282/1,$25283/1,$Blank/10-90,$25284/1,$Blank/92-98,$25285/1,
DM $T_Q104_17 = $25286/1,$25287/1,$25288/1,$25289/1,$25290/1,$25291/1,$25292/1,$25293/1,$25294/1,$Blank/10-90,$25295/1,$Blank/92-98,$25296/1,
DM $T_Q104_18 = $25297/1,$25298/1,$25299/1,$25300/1,$25301/1,$25302/1,$25303/1,$25304/1,$25305/1,$Blank/10-90,$25306/1,$Blank/92-98,$25307/1,

DM $A_Q102B = $25335/1,$25336/1,$25337/1,$25338/1,$25339/1,$25340/1,$25341/1,$25342/1,$25343/1,$25344/1,$25345/1,

DM $Q102C = $25346-25347/1-99,


!===================================================================================================================================
! $TOM - define codes TOM - order based on data set
! $OTH - define codes OTHER SPONT - order based on data set
! $AID - define codes AIDED/PROMPTED - order based on data set
! $BUMO - define codes BUMO - order based on data set
! $CONS - define codes CONSIDERER by brand (code 1+2) - order based on data set
! $FFAVE - define codes 1st FAVOURITE - order based on data set
! $SFAVE - define codes 2nd FAVOURITE - order based on data set
! $RECO - define codes RECOMMENDERS - order based on data set
!===================================================================================================================================
[*data BR1 (;) =
BDO Mobile/Online (NET);
BDO Mobile/Online;
BDO Pay;
BPI Mobile/Online;
CLIQQ;
Coins.ph;
GCash;
GrabPay;
PayMaya;
PayPal;
ShopeePay;
Go Tyme;
PalawanPay]

DM $TOM =
($A_Q16a/13+22+([*do a = 91:92]$xQ16a_[a]_other/1002+1022[*sle]+[*end a])),
($A_Q16a/13+([*do a = 91:92]$xQ16a_[a]_other/1002[*sle]+[*end a])),
($A_Q16a/22+([*do a = 91:92]$xQ16a_[a]_other/1022[*sle]+[*end a])),
($A_Q16a/12+([*do a = 91:92]$xQ16a_[a]_other/1010[*sle]+[*end a])),
($A_Q16a/11+([*do a = 91:92]$xQ16a_[a]_other/1072[*sle]+[*end a])),
($A_Q16a/3+([*do a = 91:92]$xQ16a_[a]_other/1062[*sle]+[*end a])),
($A_Q16a/1+([*do a = 91:92]$xQ16a_[a]_other/1056[*sle]+[*end a])),
($A_Q16a/7+([*do a = 91:92]$xQ16a_[a]_other/1029[*sle]+[*end a])),
($A_Q16a/2+([*do a = 91:92]$xQ16a_[a]_other/1050+1043[*sle]+[*end a])),
($A_Q16a/4+([*do a = 91:92]$xQ16a_[a]_other/1058+1061[*sle]+[*end a])),
($A_Q16a/23+([*do a = 91:92]$xQ16a_[a]_other/1009+1046+1053+1059[*sle]+[*end a])),
$A_Q16a/46,
$A_Q16a/48,


DM $OTH = 
($A_Q16b/13+22+([*do a = 91:92]$xQ16b_[a]_other/1002+1022[*sle]+[*end a])),
($A_Q16b/13+([*do a = 91:92]$xQ16b_[a]_other/1002[*sle]+[*end a])),
($A_Q16b/22+([*do a = 91:92]$xQ16b_[a]_other/1022[*sle]+[*end a])),
($A_Q16b/12+([*do a = 91:92]$xQ16b_[a]_other/1010[*sle]+[*end a])),
($A_Q16b/11+([*do a = 91:92]$xQ16b_[a]_other/1072[*sle]+[*end a])),
($A_Q16b/3+([*do a = 91:92]$xQ16b_[a]_other/1062[*sle]+[*end a])),
($A_Q16b/1+([*do a = 91:92]$xQ16b_[a]_other/1056[*sle]+[*end a])),
($A_Q16b/7+([*do a = 91:92]$xQ16b_[a]_other/1029[*sle]+[*end a])),
($A_Q16b/2+([*do a = 91:92]$xQ16b_[a]_other/1050+1043[*sle]+[*end a])),
($A_Q16b/4+([*do a = 91:92]$xQ16b_[a]_other/1058+1061[*sle]+[*end a])),
($A_Q16b/23+([*do a = 91:92]$xQ16b_[a]_other/1009+1046+1053+1059[*sle]+[*end a])),
$A_Q16b/46,
$A_Q16b/48,


DM $AID = 
($A_Q16c/13+22+([*do a = 91:92]$xQ16c_[a]_other/1002+1022[*sle]+[*end a])),
($A_Q16c/13+([*do a = 91:92]$xQ16c_[a]_other/1002[*sle]+[*end a])),
($A_Q16c/22+([*do a = 91:92]$xQ16c_[a]_other/1022[*sle]+[*end a])),
($A_Q16c/12+([*do a = 91:92]$xQ16c_[a]_other/1010[*sle]+[*end a])),
($A_Q16c/11+([*do a = 91:92]$xQ16c_[a]_other/1072[*sle]+[*end a])),
($A_Q16c/3+([*do a = 91:92]$xQ16c_[a]_other/1062[*sle]+[*end a])),
($A_Q16c/1+([*do a = 91:92]$xQ16c_[a]_other/1056[*sle]+[*end a])),
($A_Q16c/7+([*do a = 91:92]$xQ16c_[a]_other/1029[*sle]+[*end a])),
($A_Q16c/2+([*do a = 91:92]$xQ16c_[a]_other/1050+1043[*sle]+[*end a])),
($A_Q16c/4+([*do a = 91:92]$xQ16c_[a]_other/1058+1061[*sle]+[*end a])),
($A_Q16c/23+([*do a = 91:92]$xQ16c_[a]_other/1009+1046+1053+1059[*sle]+[*end a])),
$A_Q16c/46,
$A_Q16c/48,


DM $BUMO = 
($A_Q17b/13+22+([*do a = 91:92]$xQ17b_[a]_other/1002+1022[*sle]+[*end a])),
($A_Q17b/13+([*do a = 91:92]$xQ17b_[a]_other/1002[*sle]+[*end a])),
($A_Q17b/22+([*do a = 91:92]$xQ17b_[a]_other/1022[*sle]+[*end a])),
($A_Q17b/12+([*do a = 91:92]$xQ17b_[a]_other/1010[*sle]+[*end a])),
($A_Q17b/11+([*do a = 91:92]$xQ17b_[a]_other/1072[*sle]+[*end a])),
($A_Q17b/3+([*do a = 91:92]$xQ17b_[a]_other/1062[*sle]+[*end a])),
($A_Q17b/1+([*do a = 91:92]$xQ17b_[a]_other/1056[*sle]+[*end a])),
($A_Q17b/7+([*do a = 91:92]$xQ17b_[a]_other/1029[*sle]+[*end a])),
($A_Q17b/2+([*do a = 91:92]$xQ17b_[a]_other/1050+1043[*sle]+[*end a])),
($A_Q17b/4+([*do a = 91:92]$xQ17b_[a]_other/1058+1061[*sle]+[*end a])),
($A_Q17b/23+([*do a = 91:92]$xQ17b_[a]_other/1009+1046+1053+1059[*sle]+[*end a])),
$A_Q17b/46,
$A_Q17b/48,



DM $XP2M = 
($A_Q17a/13+22+([*do a = 91:92]$xQ17a_[a]_other/1002+1022[*sle]+[*end a])),
($A_Q17a/13+([*do a = 91:92]$xQ17a_[a]_other/1002[*sle]+[*end a])),
($A_Q17a/22+([*do a = 91:92]$xQ17a_[a]_other/1022[*sle]+[*end a])),
($A_Q17a/12+([*do a = 91:92]$xQ17a_[a]_other/1010[*sle]+[*end a])),
($A_Q17a/11+([*do a = 91:92]$xQ17a_[a]_other/1072[*sle]+[*end a])),
($A_Q17a/3+([*do a = 91:92]$xQ17a_[a]_other/1062[*sle]+[*end a])),
($A_Q17a/1+([*do a = 91:92]$xQ17a_[a]_other/1056[*sle]+[*end a])),
($A_Q17a/7+([*do a = 91:92]$xQ17a_[a]_other/1029[*sle]+[*end a])),
($A_Q17a/2+([*do a = 91:92]$xQ17a_[a]_other/1050+1043[*sle]+[*end a])),
($A_Q17a/4+([*do a = 91:92]$xQ17a_[a]_other/1058+1061[*sle]+[*end a])),
($A_Q17a/23+([*do a = 91:92]$xQ17a_[a]_other/1009+1046+1053+1059[*sle]+[*end a])),
$A_Q17a/46,
$A_Q17a/48,




DM $V45R1 = $TQ45R13 .or. $TQ45R22,
DM $V45R2 = $TQ45R13,
DM $V45R3 = $TQ45R22,
DM $V45R4 = $TQ45R12,
DM $V45R5 = $TQ45R11,
DM $V45R6 = $TQ45R3,
DM $V45R7 = $TQ45R1,
DM $V45R8 = $TQ45R7,
DM $V45R9 = $TQ45R2,
DM $V45R10= $TQ45R4,
DM $V45R11= $TQ45R23,
DM $V45R12= $TQ45R45,
DM $V45R13= $TQ45R47,


DM $CONS = [*DOA=1:13]
           $V45R[a]/1..2,
           [*end a]

DM $FFAVE = 
($A_Q16e/13+22+([*do a = 91:92]$xQ16e_[a]_other/1002+1022[*sle]+[*end a])),
($A_Q16e/13+([*do a = 91:92]$xQ16e_[a]_other/1002[*sle]+[*end a])),
($A_Q16e/22+([*do a = 91:92]$xQ16e_[a]_other/1022[*sle]+[*end a])),
($A_Q16e/12+([*do a = 91:92]$xQ16e_[a]_other/1010[*sle]+[*end a])),
($A_Q16e/11+([*do a = 91:92]$xQ16e_[a]_other/1072[*sle]+[*end a])),
($A_Q16e/3+([*do a = 91:92]$xQ16e_[a]_other/1062[*sle]+[*end a])),
($A_Q16e/1+([*do a = 91:92]$xQ16e_[a]_other/1056[*sle]+[*end a])),
($A_Q16e/7+([*do a = 91:92]$xQ16e_[a]_other/1029[*sle]+[*end a])),
($A_Q16e/2+([*do a = 91:92]$xQ16e_[a]_other/1050+1043[*sle]+[*end a])),
($A_Q16e/4+([*do a = 91:92]$xQ16e_[a]_other/1058+1061[*sle]+[*end a])),
($A_Q16e/23+([*do a = 91:92]$xQ16e_[a]_other/1009+1046+1053+1059[*sle]+[*end a])),
$A_Q16e/46,
$A_Q16e/48,

DM $SFAVE = 
($A_Q16f/13+22+([*do a = 91:92]$xQ16f_[a]_other/1002+1022[*sle]+[*end a])),
($A_Q16f/13+([*do a = 91:92]$xQ16f_[a]_other/1002[*sle]+[*end a])),
($A_Q16f/22+([*do a = 91:92]$xQ16f_[a]_other/1022[*sle]+[*end a])),
($A_Q16f/12+([*do a = 91:92]$xQ16f_[a]_other/1010[*sle]+[*end a])),
($A_Q16f/11+([*do a = 91:92]$xQ16f_[a]_other/1072[*sle]+[*end a])),
($A_Q16f/3+([*do a = 91:92]$xQ16f_[a]_other/1062[*sle]+[*end a])),
($A_Q16f/1+([*do a = 91:92]$xQ16f_[a]_other/1056[*sle]+[*end a])),
($A_Q16f/7+([*do a = 91:92]$xQ16f_[a]_other/1029[*sle]+[*end a])),
($A_Q16f/2+([*do a = 91:92]$xQ16f_[a]_other/1050+1043[*sle]+[*end a])),
($A_Q16f/4+([*do a = 91:92]$xQ16f_[a]_other/1058+1061[*sle]+[*end a])),
($A_Q16f/23+([*do a = 91:92]$xQ16f_[a]_other/1009+1046+1053+1059[*sle]+[*end a])),
$A_Q16f/46,
$A_Q16f/48,

DM $RECO =
($A_Q16g/13+22+([*do a = 91:92]$xQ16g_[a]_other/1002+1022[*sle]+[*end a])),
($A_Q16g/13+([*do a = 91:92]$xQ16g_[a]_other/1002[*sle]+[*end a])),
($A_Q16g/22+([*do a = 91:92]$xQ16g_[a]_other/1022[*sle]+[*end a])),
($A_Q16g/12+([*do a = 91:92]$xQ16g_[a]_other/1010[*sle]+[*end a])),
($A_Q16g/11+([*do a = 91:92]$xQ16g_[a]_other/1072[*sle]+[*end a])),
($A_Q16g/3+([*do a = 91:92]$xQ16g_[a]_other/1062[*sle]+[*end a])),
($A_Q16g/1+([*do a = 91:92]$xQ16g_[a]_other/1056[*sle]+[*end a])),
($A_Q16g/7+([*do a = 91:92]$xQ16g_[a]_other/1029[*sle]+[*end a])),
($A_Q16g/2+([*do a = 91:92]$xQ16g_[a]_other/1050+1043[*sle]+[*end a])),
($A_Q16g/4+([*do a = 91:92]$xQ16g_[a]_other/1058+1061[*sle]+[*end a])),
($A_Q16g/23+([*do a = 91:92]$xQ16g_[a]_other/1009+1046+1053+1059[*sle]+[*end a])),
$A_Q16g/46,
$A_Q16g/48,

DM $EVERD =
($A_Q17l/13+22+([*do a = 91:92]$xQ17l_[a]_other/1002+1022[*sle]+[*end a])),
($A_Q17l/13+([*do a = 91:92]$xQ17l_[a]_other/1002[*sle]+[*end a])),
($A_Q17l/22+([*do a = 91:92]$xQ17l_[a]_other/1022[*sle]+[*end a])),
($A_Q17l/12+([*do a = 91:92]$xQ17l_[a]_other/1010[*sle]+[*end a])),
($A_Q17l/11+([*do a = 91:92]$xQ17l_[a]_other/1072[*sle]+[*end a])),
($A_Q17l/3+([*do a = 91:92]$xQ17l_[a]_other/1062[*sle]+[*end a])),
($A_Q17l/1+([*do a = 91:92]$xQ17l_[a]_other/1056[*sle]+[*end a])),
($A_Q17l/7+([*do a = 91:92]$xQ17l_[a]_other/1029[*sle]+[*end a])),
($A_Q17l/2+([*do a = 91:92]$xQ17l_[a]_other/1050+1043[*sle]+[*end a])),
($A_Q17l/4+([*do a = 91:92]$xQ17l_[a]_other/1058+1061[*sle]+[*end a])),
($A_Q17l/23+([*do a = 91:92]$xQ17l_[a]_other/1009+1046+1053+1059[*sle]+[*end a])),
$A_Q17l/46,
$A_Q17l/48,

DM $EXIST =
($A_Q17d/13+22+([*do a = 91:92]$xQ17d_[a]_other/1002+1022[*sle]+[*end a])),
($A_Q17d/13+([*do a = 91:92]$xQ17d_[a]_other/1002[*sle]+[*end a])),
($A_Q17d/22+([*do a = 91:92]$xQ17d_[a]_other/1022[*sle]+[*end a])),
($A_Q17d/12+([*do a = 91:92]$xQ17d_[a]_other/1010[*sle]+[*end a])),
($A_Q17d/11+([*do a = 91:92]$xQ17d_[a]_other/1072[*sle]+[*end a])),
($A_Q17d/3+([*do a = 91:92]$xQ17d_[a]_other/1062[*sle]+[*end a])),
($A_Q17d/1+([*do a = 91:92]$xQ17d_[a]_other/1056[*sle]+[*end a])),
($A_Q17d/7+([*do a = 91:92]$xQ17d_[a]_other/1029[*sle]+[*end a])),
($A_Q17d/2+([*do a = 91:92]$xQ17d_[a]_other/1050+1043[*sle]+[*end a])),
($A_Q17d/4+([*do a = 91:92]$xQ17d_[a]_other/1058+1061[*sle]+[*end a])),
($A_Q17d/23+([*do a = 91:92]$xQ17d_[a]_other/1009+1046+1053+1059[*sle]+[*end a])),
$A_Q17d/46,
$A_Q17d/48,

!===================================================================================================================================
! Price Premium (edit loop based on number of brands)
!===================================================================================================================================

[*data 4601 = 13,22]

[*do c = 1:2]
DI $BDO[c] = 0,
if $T_Q46_[4601.c]/1, DI $BDO[c] = 1,
if $T_Q46_[4601.c]/2, DI $BDO[c] = 2,
if $T_Q46_[4601.c]/3, DI $BDO[c] = 3,
if $T_Q46_[4601.c]/4, DI $BDO[c] = 4,
if $T_Q46_[4601.c]/5, DI $BDO[c] = 5,
if $T_Q46_[4601.c]/6, DI $BDO[c] = 6,
[*end c]

DI $BDO_T = [*do c = 1:2]$BDO[c][*sle]+[*end c],

DI $BDO_C = 0,
[*do c = 1:2]
IF $BDO[c]/nb, DI $BDO_C = $BDO_C + 1,
[*end c]

DI $PP1 = $BDO_T / $BDO_C,
DM $PP2 = $T_Q46_13,
DM $PP3 = $T_Q46_22,
DM $PP4 = $T_Q46_12,
DM $PP5 = $T_Q46_11,
DM $PP6 = $T_Q46_3,
DM $PP7 = $T_Q46_1,
DM $PP8 = $T_Q46_7,
DM $PP9 = $T_Q46_2,
DM $PP10= $T_Q46_4,
DM $PP11= $T_Q46_23,
DM $PP12= $T_Q46_45,
DM $PP13= $T_Q46_47,

[*DO A = 1:1]
[*FOR b = 1:3:4:5:6:7:8:10:11:12:13:14:16:17:20:21:22:23:24:25:26:27:28:29:30:31:32:33]
IF $T_Q64_[B]/[a],    DI $Brand1_Attr[b] = 1,
[*end b]
[*END A]

[*DO A = 2:2] !bdo online
[*FOR b = 1:3:4:5:6:7:8:10:11:12:13:14:16:17:20:21:22:23:24:25:26:27:28:29:30:31:32:33]
IF ($A_Q16d/13+([*do c = 91:92]$xQ16d_[c]_other/1002[*sle]+[*end c])).$T_Q64_[B]/[a-1],  DI $Brand2_Attr[b] = 1,
[*end b]
[*END A]

[*DO A = 3:3] !bdo pay
[*FOR b = 1:3:4:5:6:7:8:10:11:12:13:14:16:17:20:21:22:23:24:25:26:27:28:29:30:31:32:33]
IF ($A_Q16d/22+([*do c = 91:92]$xQ16d_[c]_other/1022[*sle]+[*end c])).$T_Q64_[B]/[a-2],      DI $Brand3_Attr[b] = 1,
[*end b]
[*END A]

[*DO A = 4:11]
[*FOR b = 1:3:4:5:6:7:8:10:11:12:13:14:16:17:20:21:22:23:24:25:26:27:28:29:30:31:32:33]
IF $T_Q64_[B]/[a-2],               DI $Brand[a]_Attr[b] = 1,
[*end b]
[*END A]

[*DO A = 12:13]
[*FOR b = 1:3:4:5:6:7:8:10:11:12:13:14:16:17:20:21:22:23:24:25:26:27:28:29:30:31:32:33]
DI $Brand[a]_Attr[b] = 0,
DI $Brand[a]_Attr[b] = 0,
[*end b]
[*END A]



!===================================================================================================================================
!**********  START OF PUNCHING **********
! edit all columns allocation accordingly
! edit loop based on number of brands
! adjust loop of brand association
!===================================================================================================================================





!------------------------------------------------------------- START OF PUNCHING

[*do a = 1:13]

DI $RespNo = $1-10, !- serial or respid
DI $BRANDS = [A], !- brand code

IF $TOM/[A],                      					DI $Aware = 4,       ! TOM
IF $TOM/n[A].$OTH/[A],            					DI $Aware = 3,       ! UNAIDED
IF $TOM/n[A].$OTH/n[A].$AID/[A],  					DI $Aware = 2,       ! AIDED
IF $TOM/n[A].$OTH/n[A].$AID/n[A], 					DI $Aware = 1,       ! NOT AWARE


!! == CONSIDER BRANDS - (CONSIDER BUYING+1ST+2ND FAVORITE+BUMO) == !!

IF $cons/[A]+$FFAVE/[A]+$SFAVE/[A]+$bumo/[A],    	DI $Consider = 1,     	 ! CONSIDER
IF $cons/n[A].$FFAVE/n[A].$SFAVE/n[A].$bumo/n[A],	DI $Consider = 0,     	 ! NOT CONSIDER


!! == PREFER BRANDS - (FIRST FAVORITE/2ND FAVORITE) == !!

IF $FFAVE/[A],                                      DI $Favrite = 3,         ! IF 1ST FAVORITE BRAND
IF $FFAVE/n[A].$SFAVE/[A],                          DI $Favrite = 2,         ! IF 2ND FAVORITE BRAND
IF $FFAVE/n[A].$SFAVE/n[A],                         DI $Favrite = 1,         ! IF NEITHER 1 NOR 2 FAVORITE


!! == RECOMMENDED BRANDS == !!

IF $reco/[A],                                       DI $Recmnd = 1,      	 ! RECOMMEND
IF $reco/n[A],                                      DI $Recmnd = 0,      	 ! NOT RECOMMEND

!! == RECOMMENDED BRANDS == !!

IF $XP2M/[A],                                       DI $P2M = 1,      	 ! RECOMMEND
IF $XP2M/n[A],                                      DI $P2M = 0,      	 ! NOT RECOMMEND


!! == EVER DOWNLOADED BRANDS == !!

IF $EVERD/[A],                                     DI $Everdl = 1,      	 ! EVER DOWNLOAD
IF $EVERD/n[A],                                    DI $Everdl = 0,      	 ! NOT EVER DOWNLOAD


!! == EXISTING ACCOUNT BRANDS == !!

IF $EXIST/[A],                                   DI $Existacc = 1,      	 ! EXIST
IF $EXIST/n[A],                                  DI $Existacc = 0,      	 ! NOT EXIST




!! == PRICE PREMIUM == !!
! Note: This will only apply if highest code in questionnaire has the most negative stub. If not do not reverse scale
!-----------------------------------------------------------------------------------------------------------------------

IF $PP[A]/1,            	DW $Premium = 1.00,      ! I WOULDN`'T BUY IT AT ALL - NO ANSWER IN DATA TABLES - NOT INCLUDED
IF $PP[A]/2,            	DW $Premium = 2.00,      ! BUY WHEN PRICE IS THE SAME AS THE CHEAPEST BRAND
IF $PP[A]/3,            	DW $Premium = 3.00,      ! BUY EVEN IF IT IS A LITTLE EXPENSIVE THAN THE CHEAPEST BRAND
IF $PP[A]/4,            	DW $Premium = 4.00,      ! BUY EVEN IF IT IS SO MUCH MORE EXPENSIVE THAN THE CHEAPEST BRAND
IF $PP[A]/5,            	DW $Premium = 5.00,      ! BUY EVEN IF IT IS EXPENSIVE THAN OTHER BRANDS
IF $PP[A]/6,            	DW $Premium = 6.00,      ! BUY IT NO MATTER WHAT THE PRICE
						
IF $PP[A]/B.$Consider/0, 	DW $Premium = 1.00,		 ! IF NOT CONSIDERED TO BUY
IF $PP[A]/B.$Consider/1, 	DW $Premium = 3.00,		 ! IF CONSIDERED TO BUY
IF $PP[A]/B.$Recmnd/1, 		DW $Premium = 3.25,		 ! IF RECOMMENDED BRAND

[*FOR B = 1:3:4:5:6:7:8:10:11:12:13:14:16:17:20:21:22:23:24:25:26:27:28:29:30:31:32:33]
IF $Brand[A]_Attr[b]/1, DI $Attr[B] = 1,
IF $Brand[A]_Attr[b]/n1, DI $Attr[B] = 0,
[*END b] 

!! == SEGMENTS / FILTERS == !!

if $Q3/1,                   DI $AREA = 1,
if $Q3/2+3+4+5,             DI $AREA = 2,
if $Q3/6+7+8,               DI $AREA = 3,
if $Q3/9+10+11,             DI $AREA = 4,
if $Q3/12+13+14+15+16+17,   DI $AREA = 5,

if $Q4/1,   DI $LOCALE = 1,
if $Q4/2,   DI $LOCALE = 2,

if $SEC19/1,   DI $SEC = 1,
if $SEC19/2,   DI $SEC = 2,
if $SEC19/3,   DI $SEC = 3,
if $SEC19/4,   DI $SEC = 4,

if $T_Q1_1/13..20,   DI $AGE_RANGE = 1,
if $T_Q1_1/21..28,   DI $AGE_RANGE = 2,
if $T_Q1_1/29..37,   DI $AGE_RANGE = 3,
if $T_Q1_1/38..51,   DI $AGE_RANGE = 4,
if $T_Q1_1/52..65,   DI $AGE_RANGE = 5,

if $Q2/1,          DI $GENDER = 1,
if $Q2/2,          DI $GENDER = 2,

if $T_Q1_1/1..21,    DI $LIFESTAGE = 1,
if $T_Q1_1/22..29,   DI $LIFESTAGE = 2,
if $T_Q1_1/30..34,   DI $LIFESTAGE = 3,
if $T_Q1_1/35..44,   DI $LIFESTAGE = 4,
if $T_Q1_1/45..99,   DI $LIFESTAGE = 5,

if $A_Q187new/1..3+11,   DI $WORKING_STAT = 1,
if $A_Q187new/4..8+10,   DI $WORKING_STAT = 2,

if $Q17i/1,   DI $USERSHIP = 1,
if $Q17i/2,   DI $USERSHIP = 2,

if $TQ17e/1,  DI $GCASH_USER = 1,
if $TQ17e/N1, DI $GCASH_USER = 2,

[*DO D = 1:3]
if $Q72/[D], DI $BANK_CON = [D],
[*END D]

[*DO D = 1:17]
if $Q3/[D], DI $REGION = [D],
[*END D]


if ($Q3/1).($Q4/1),                   DI $AREAXLOC = 1,
if ($Q3/2+3+4+5).($Q4/1),             DI $AREAXLOC = 2,
if ($Q3/6+7+8).($Q4/1),               DI $AREAXLOC = 3,
if ($Q3/9+10+11).($Q4/1),             DI $AREAXLOC = 4,
if ($Q3/12+13+14+15+16+17).($Q4/1),   DI $AREAXLOC = 5,

if ($Q3/1).($Q4/2),                   DI $AREAXLOC = 6,
if ($Q3/2+3+4+5).($Q4/2),             DI $AREAXLOC = 7,
if ($Q3/6+7+8).($Q4/2),               DI $AREAXLOC = 8,
if ($Q3/9+10+11).($Q4/2),             DI $AREAXLOC = 9,
if ($Q3/12+13+14+15+16+17).($Q4/2),   DI $AREAXLOC = 10,

If $APR2024/NB, DI $Month = 1,
If $MAY2024/NB, DI $Month = 2,
If $JUN2024/NB, DI $Month = 3,
! +$OCT2023/NB+$NOV2023/NB

IF $Q22023/NB, DI $Quarter = 1,
IF $Q32023/NB, DI $Quarter = 2,
IF $Q42023/NB, DI $Quarter = 3,
IF $Q12024/NB, DI $Quarter = 4,
IF $Q22024/NB, DI $Quarter = 5,
IF $Q32024/NB, DI $Quarter = 6,

[*DO C = 1:18]
[*FOR B = 1:2:3:4:5:6:7:8:9:91:99]
IF $T_Q104_[C]/[B], DI $Q104_[C] = [B],
[*END B]
[*END C]

[*DO B = 1:11]
IF $A_Q102B/[B], DI $Q102b = [B],
[*END B]

IF ($TQ17a/1).($TQ17c/N1), DI $P1MLAPSER = 1,
IF N(($TQ17a/1).($TQ17c/N1)), DI $P1MLAPSER = 0,

IF ($TQ17c/1).($TQ17k/N1), DI $P1WLAPSER = 1,
IF N(($TQ17c/1).($TQ17k/N1)), DI $P1WLAPSER = 0,

DI $QProvince = $120-121,


IF ($OldQuarter/NB+$NewQuarter/NB), LCSV (H) $RespNo.$Brands.$Aware.$Consider.$Favrite.$Recmnd.$Premium.$Everdl.$Existacc.$P2M.
[*FORB=1:3:4:5:6:7:8:10:11:12:13:14:16:17:20:21:22:23:24:25:26:27:28:29:30:31:32:33]
$Attr[B].
[*ENDB]
$AREA.$LOCALE.$SEC.$AGE_RANGE.$GENDER.$LIFESTAGE.$WORKING_STAT.$USERSHIP.$GCASH_USER.$BANK_CON.$REGION.$AREAXLOC.
$Quarter.
$QProvince.
$P1MLAPSER.
$P1WLAPSER.
$WTSlegacy,
[*END A]




FINISH DATA,




